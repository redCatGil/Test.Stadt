<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="12" passed="12">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="53" started-at="2018-02-04T18:16:42Z" finished-at="2018-02-04T18:16:42Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="53" started-at="2018-02-04T18:16:42Z" finished-at="2018-02-04T18:16:42Z">
      <class name="redCat.Game.Stadt.Bauwerke.GebaeudeTest">
        <test-method status="PASS" signature="init()[pri:0, instance:redCat.Game.Stadt.Bauwerke.GebaeudeTest@675d3402]" name="init" is-config="true" duration-ms="17" started-at="2018-02-04T19:16:42Z" finished-at="2018-02-04T19:16:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="GebaeudeBauDiasMussGleichSein()[pri:0, instance:redCat.Game.Stadt.Bauwerke.GebaeudeTest@675d3402]" name="GebaeudeBauDiasMussGleichSein" duration-ms="4" started-at="2018-02-04T19:16:42Z" finished-at="2018-02-04T19:16:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GebaeudeBauDiasMussGleichSein -->
        <test-method status="PASS" signature="GebaeudeBauMuenzenMuessenGleichSein()[pri:0, instance:redCat.Game.Stadt.Bauwerke.GebaeudeTest@675d3402]" name="GebaeudeBauMuenzenMuessenGleichSein" duration-ms="1" started-at="2018-02-04T19:16:42Z" finished-at="2018-02-04T19:16:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GebaeudeBauMuenzenMuessenGleichSein -->
        <test-method status="PASS" signature="GebaeudeBauWerkzeugMussGleichSein()[pri:0, instance:redCat.Game.Stadt.Bauwerke.GebaeudeTest@675d3402]" name="GebaeudeBauWerkzeugMussGleichSein" duration-ms="1" started-at="2018-02-04T19:16:42Z" finished-at="2018-02-04T19:16:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GebaeudeBauWerkzeugMussGleichSein -->
        <test-method status="PASS" signature="GebaeudeBauzeitMinutenMussGleichSein()[pri:0, instance:redCat.Game.Stadt.Bauwerke.GebaeudeTest@675d3402]" name="GebaeudeBauzeitMinutenMussGleichSein" duration-ms="0" started-at="2018-02-04T19:16:42Z" finished-at="2018-02-04T19:16:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GebaeudeBauzeitMinutenMussGleichSein -->
        <test-method status="PASS" signature="GebaeudeBauzeitSekundenMussGleichSein()[pri:0, instance:redCat.Game.Stadt.Bauwerke.GebaeudeTest@675d3402]" name="GebaeudeBauzeitSekundenMussGleichSein" duration-ms="1" started-at="2018-02-04T19:16:42Z" finished-at="2018-02-04T19:16:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GebaeudeBauzeitSekundenMussGleichSein -->
        <test-method status="PASS" signature="GebaeudeBauzeitStundenMussGleichSein()[pri:0, instance:redCat.Game.Stadt.Bauwerke.GebaeudeTest@675d3402]" name="GebaeudeBauzeitStundenMussGleichSein" duration-ms="1" started-at="2018-02-04T19:16:42Z" finished-at="2018-02-04T19:16:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GebaeudeBauzeitStundenMussGleichSein -->
        <test-method status="PASS" signature="GebaeudeBrauchtEineStrasse()[pri:0, instance:redCat.Game.Stadt.Bauwerke.GebaeudeTest@675d3402]" name="GebaeudeBrauchtEineStrasse" duration-ms="0" started-at="2018-02-04T19:16:42Z" finished-at="2018-02-04T19:16:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GebaeudeBrauchtEineStrasse -->
        <test-method status="PASS" signature="GebaeudeBreiteMussGleichSein()[pri:0, instance:redCat.Game.Stadt.Bauwerke.GebaeudeTest@675d3402]" name="GebaeudeBreiteMussGleichSein" duration-ms="1" started-at="2018-02-04T19:16:42Z" finished-at="2018-02-04T19:16:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GebaeudeBreiteMussGleichSein -->
        <test-method status="PASS" signature="GebaeudeLaengeMussGleichSein()[pri:0, instance:redCat.Game.Stadt.Bauwerke.GebaeudeTest@675d3402]" name="GebaeudeLaengeMussGleichSein" duration-ms="1" started-at="2018-02-04T19:16:42Z" finished-at="2018-02-04T19:16:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GebaeudeLaengeMussGleichSein -->
        <test-method status="PASS" signature="GebaeudeNamenMussGleichSein()[pri:0, instance:redCat.Game.Stadt.Bauwerke.GebaeudeTest@675d3402]" name="GebaeudeNamenMussGleichSein" duration-ms="0" started-at="2018-02-04T19:16:42Z" finished-at="2018-02-04T19:16:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GebaeudeNamenMussGleichSein -->
        <test-method status="PASS" signature="GebaeudeZeitalterMussGleichSein()[pri:0, instance:redCat.Game.Stadt.Bauwerke.GebaeudeTest@675d3402]" name="GebaeudeZeitalterMussGleichSein" duration-ms="1" started-at="2018-02-04T19:16:42Z" finished-at="2018-02-04T19:16:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GebaeudeZeitalterMussGleichSein -->
        <test-method status="PASS" signature="f()[pri:0, instance:redCat.Game.Stadt.Bauwerke.GebaeudeTest@675d3402]" name="f" duration-ms="0" started-at="2018-02-04T19:16:42Z" finished-at="2018-02-04T19:16:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
      </class> <!-- redCat.Game.Stadt.Bauwerke.GebaeudeTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
